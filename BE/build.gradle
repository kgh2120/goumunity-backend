plugins {
	id 'java'
	id 'org.springframework.boot' version '3.2.1'
	id 'io.spring.dependency-management' version '1.1.4'
	id 'com.diffplug.spotless' version '6.21.0'
}

group = 'com.ssafy'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '21'
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-websocket'
	implementation 'org.springframework.boot:spring-boot-starter-mail'
	implementation 'org.springframework.boot:spring-boot-starter-data-mongodb'
	//session
	implementation 'org.springframework.boot:spring-boot-starter-data-redis'
	implementation 'org.springframework.session:spring-session-core'
	implementation 'org.springframework.session:spring-session-data-redis'

	//cache
	implementation 'com.github.ben-manes.caffeine:caffeine:3.1.8'
	implementation 'org.springframework.boot:spring-boot-starter-cache'

	//QueryDsl
	implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
	annotationProcessor "com.querydsl:querydsl-apt:5.0.0:jakarta"
	annotationProcessor "jakarta.annotation:jakarta.annotation-api"
	annotationProcessor "jakarta.persistence:jakarta.persistence-api"

	// sockect
	implementation 'org.springframework.boot:spring-boot-starter-websocket'

    implementation 'org.springframework.cloud:spring-cloud-starter-aws:2.2.6.RELEASE'
	implementation 'jakarta.xml.bind:jakarta.xml.bind-api:4.0.1'

	compileOnly 'org.projectlombok:lombok'
	runtimeOnly 'com.h2database:h2'
	runtimeOnly 'com.mysql:mysql-connector-j'
	runtimeOnly 'org.mariadb.jdbc:mariadb-java-client'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'


	//Config-Server By Yun
	// https://mvnrepository.com/artifact/org.springframework.cloud/spring-cloud-starter-config
	//implementation group: 'org.springframework.cloud', name: 'spring-cloud-starter-config', version: '4.1.0'
	// https://mvnrepository.com/artifact/org.springframework.cloud/spring-cloud-starter-bootstrap
//	implementation group: 'org.springframework.cloud', name: 'spring-cloud-starter-bootstrap', version: '4.1.0'

}

spotless {
	java {
		// import 순서 정의
		importOrder(
				"java",
				"javax",
				"lombok",
				"org.springframework",
				"",
				"\\#",
				"org.junit",
				"\\#org.junit",
				"com.guide",
				"\\#com.guide"
		)
		// 사용하지 않는 import 제거
		removeUnusedImports()
		// 구글 자바 포맷 적용
		googleJavaFormat()

		indentWithTabs(2)
		indentWithSpaces(4)
		// 공백 제거
		trimTrailingWhitespace()
		// 끝부분 New Line 처리
		endWithNewline()
	}
}

tasks.register('updateGitHooks', Copy){
	from './script/pre-commit'
	into '../.git/hooks'
	fileMode 0775
}
compileJava.dependsOn 'updateGitHooks'

tasks.named('test') {
	useJUnitPlatform()
}

// Querydsl 설정부
def generatedDir = 'src/main/generated'

clean {
	delete file (generatedDir)
}